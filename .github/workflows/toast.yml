name: toast

on:
  workflow_dispatch:
    inputs:
      url:
        description: the url you want to track
      dir:
        description: the dir you store the archive
      repo-user:
        description: username of the owner of the repo that save the archive
        default: dipsywong98
      repo-name:
        description: the name of the repo that save the archive
        default: toast
      timeout:
        description: seconds to pause and check in
        default: "18000"

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Install httrack
        run: sudo apt-get install -y httrack
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.repo-user}}/${{inputs.repo-name}}
          path: website
      - uses: robinraju/release-downloader@v1.8
        continue-on-error: true
        with:
          repository: ${{inputs.repo-user}}/${{inputs.repo-name}}
          latest: true
          tag: ${{ inputs.dir }}
          fileName: cache-part*
          tarBall: false
          zipBall: false
          extract: false
          token: ${{ secrets.TOAST_TOKEN }}
      - run: ls
      - run: ls website
      # - run: |
      #     mkdir --parents "$HOME/.ssh"
      #     DEPLOY_KEY_FILE="$HOME/.ssh/deploy_key"
      #     echo "${{ secrets.TOAST_SSH_KEY }}" > "$DEPLOY_KEY_FILE"
      #     chmod 600 "$DEPLOY_KEY_FILE"

      #     SSH_KNOWN_HOSTS_FILE="$HOME/.ssh/known_hosts"
      #     ssh-keyscan -H "github.com" > "$SSH_KNOWN_HOSTS_FILE"

      #     export GIT_SSH_COMMAND="ssh -i "$DEPLOY_KEY_FILE" -o UserKnownHostsFile=$SSH_KNOWN_HOSTS_FILE"

      - run: sh toast/copy.sh ${{ inputs.url }} ${{ inputs.dir }} ${{ inputs.timeout }} ${{ secrets.TOAST_TOKEN }}
      - uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.TOAST_SSH_KEY }}
        with:
          source-directory: 'website'
          destination-github-username: ${{ inputs.repo-user }}
          destination-repository-name: ${{ inputs.repo-name }}
          target-branch: main
      - uses: ncipollo/release-action@v1
        with:
          artifacts: dist/cache-parts*
          token: ${{ secrets.TOAST_TOKEN }}
          owner: ${{inputs.repo-user}}
          repo: ${{inputs.repo-name}}
          tag: ${{ inputs.dir }}
          allowUpdates: true
          removeArtifacts: true
          
